{"ast":null,"code":"var _jsxFileName = \"/Users/seanmcavoy/nodejs_projects/MernCA_new/client/src/components/AddComment2.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { ACCESS_LEVEL_GUEST, SERVER_HOST } from \"../config/global_constants\";\nvar userComment;\nexport default class AddComment2 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      // this.setState({[e.target.name]: e.target.value})\n      userComment = e.target.value;\n    };\n\n    this.handleFileChange = e => {\n      this.setState({\n        selectedFiles: e.target.files\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let CommentArray = this.state.comments;\n      CommentArray.push(userComment);\n      this.setState({\n        comment: CommentArray\n      });\n      const commentObject = {\n        title: this.state.title,\n        discription: this.state.discription,\n        tags: this.state.tags,\n        comments: this.state.comments\n      };\n      axios.put(\"\".concat(SERVER_HOST, \"/topics/update_topic/\").concat(this.state.match.id), commentObject).then(res => {\n        this.setState({\n          redirectToDisplayBody: true\n        });\n      }).catch(err => {\n        this.setState({\n          wasSubmittedAtLeastOnce: true\n        });\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      discription: \"\",\n      tags: [],\n      comments: [],\n      selectedFiles: null,\n      redirectToDisplayBody: localStorage.accessLevel < ACCESS_LEVEL_GUEST,\n      wasSubmittedAtLeastOnce: false\n    };\n  }\n\n  componentDidMount() {//this.inputToFocus.focus()        \n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Error: All fields must be filled in\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.redirectToDisplayBody ? React.createElement(Redirect, {\n      to: \"/DisplayBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) : null, errorMessage, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"comments\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Add\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/seanmcavoy/nodejs_projects/MernCA_new/client/src/components/AddComment2.js"],"names":["React","Component","Redirect","Link","Form","axios","LinkInClass","ACCESS_LEVEL_GUEST","SERVER_HOST","userComment","AddComment2","constructor","props","handleChange","e","target","value","handleFileChange","setState","selectedFiles","files","handleSubmit","preventDefault","CommentArray","state","comments","push","comment","commentObject","title","discription","tags","put","match","id","then","res","redirectToDisplayBody","catch","err","wasSubmittedAtLeastOnce","localStorage","accessLevel","componentDidMount","render","errorMessage"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport Form from \"react-bootstrap/Form\"\n\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\n\nimport {ACCESS_LEVEL_GUEST, SERVER_HOST} from \"../config/global_constants\"\n\nvar userComment;\n\nexport default class AddComment2 extends Component\n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            title:\"\",\n            discription:\"\",\n            tags:[],\n            comments:[],\n            selectedFiles:null,\n            redirectToDisplayBody:localStorage.accessLevel < ACCESS_LEVEL_GUEST,\n            wasSubmittedAtLeastOnce:false\n        }\n    }\n\n\n    componentDidMount() \n    {     \n        //this.inputToFocus.focus()        \n    }\n \n \n    handleChange = (e) => \n    {\n        // this.setState({[e.target.name]: e.target.value})\n        userComment = e.target.value;\n    }\n\n\n    handleFileChange = (e) => \n    {\n        this.setState({selectedFiles: e.target.files})\n    }\n    \n    \n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        let CommentArray = this.state.comments;\n        CommentArray.push(userComment);\n        this.setState({comment: CommentArray});\n\n        const commentObject ={\n            title: this.state.title,\n            discription: this.state.discription,\n            tags:this.state.tags,\n            comments:this.state.comments,\n        }\n\n        axios.put(`${SERVER_HOST}/topics/update_topic/${this.state.match.id}`, commentObject)\n        .then(res => \n        {             \n            this.setState({redirectToDisplayBody:true})\n        })\n        .catch(err => \n        {\n            this.setState({wasSubmittedAtLeastOnce: true})\n        })\n\n        \n    }\n\n\n    render()\n    {       \n        let errorMessage = \"\";\n        if(this.state.wasSubmittedAtLeastOnce)\n        {\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br/></div>;\n        }                \n    \n        return (\n            <div className=\"form-container\"> \n                {this.state.redirectToDisplayBody ? <Redirect to=\"/DisplayBody\"/> : null}                                            \n                    \n                {errorMessage}\n                \n                <Form>\n                    <Form.Group controlId=\"body\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control type=\"text\" name=\"comments\"  onChange={this.handleChange} />\n                    </Form.Group>\n    \n                      <br/>\n            \n                    <LinkInClass value=\"Add\" className=\"green-button\" onClick={this.handleSubmit}/>            \n            \n                    <Link className=\"red-button\" to={\"/DisplayBody\"}>Cancel</Link>\n                </Form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}