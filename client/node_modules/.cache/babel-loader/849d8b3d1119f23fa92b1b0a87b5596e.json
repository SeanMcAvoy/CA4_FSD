{"ast":null,"code":"var _jsxFileName = \"/Users/seanmcavoy/nodejs_projects/MernCA_new/client/src/components/EditPassword.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { ACCESS_LEVEL_NORMAL_USER, SERVER_HOST } from \"../config/global_constants\";\n\nconst bcrypt = require('bcryptjs');\n\nexport default class EditUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const formInputsState = this.validate();\n\n      if (Object.keys(formInputsState).every(index => formInputsState[index])) {\n        const userObject = {\n          name: this.state.name,\n          email: this.state.email\n        };\n        axios.put(\"\".concat(SERVER_HOST, \"/users/update_user/\").concat(this.props.match.params.id), userObject, {\n          headers: {\n            \"authorization\": localStorage.token\n          }\n        }).then(res => {\n          this.setState({\n            redirectToDisplayAllCars: true\n          });\n        }).catch(err => {\n          console.log(\"Record not EDITED INVALID\");\n          this.setState({\n            wasSubmittedAtLeastOnce: true\n          });\n        });\n        axios.put(\"\".concat(SERVER_HOST, \"/users/update_user/\").concat(this.props.match.params.id), userObject, {\n          headers: {\n            \"authorization\": localStorage.token\n          }\n        }).then(res => {\n          this.setState({\n            redirectToDisplayAllCars: true\n          });\n        }).catch(err => {\n          console.log(\"Record not EDITED INVALID\");\n          this.setState({\n            wasSubmittedAtLeastOnce: true\n          });\n        });\n      } else {\n        alert(\"Record Not Added Invalid Input\");\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      redirectToDisplayAllCars: localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER,\n      wasSubmittedAtLeastOnce: false\n    };\n  }\n\n  componentDidMount() {\n    this.inputToFocus.focus();\n    axios.get(\"\".concat(SERVER_HOST, \"/users/get_user/\").concat(this.props.match.params.id), {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      this.setState({\n        name: res.data.name,\n        email: res.data.email\n      });\n    }).catch(err => {// do nothing\n    });\n  }\n\n  validateName() {\n    const pattern = /^[a-zA-Z\\s]*$/;\n    return pattern.test(String(this.state.name));\n  }\n\n  validateEmail() {\n    const pattern = /^\\S+@\\S+\\.\\S+$/;\n    return pattern.test(String(this.state.email));\n  } // validatePassword()\n  // {    \n  //     const level = parseInt(this.state.accessLevel)\n  //  if(level == 0 ){\n  //      alert(\"Warning the User Will Be Blocked From Editing Privelages Until The Access Level They are Given is Increased\")\n  //  }\n  //     return (level >= 0 && level <= 2)\n  // }\n\n\n  validate() {\n    return {\n      name: this.validateName(),\n      email: this.validateEmail()\n    };\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Error: All fields must be filled in\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.redirectToDisplayAllCars ? React.createElement(Redirect, {\n      to: \"/Logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }) : null, errorMessage, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Form.Control, {\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      type: \"text\",\n      name: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(LinkInClass, {\n      value: \"Update\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/seanmcavoy/nodejs_projects/MernCA_new/client/src/components/EditPassword.js"],"names":["React","Component","Form","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_NORMAL_USER","SERVER_HOST","bcrypt","require","EditUser","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","formInputsState","validate","Object","keys","every","index","userObject","state","email","put","match","params","id","headers","localStorage","token","then","res","redirectToDisplayAllCars","catch","err","console","log","wasSubmittedAtLeastOnce","alert","accessLevel","componentDidMount","inputToFocus","focus","get","data","validateName","pattern","test","String","validateEmail","render","errorMessage","input"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport Form from \"react-bootstrap/Form\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\n\r\nimport {ACCESS_LEVEL_NORMAL_USER, SERVER_HOST} from \"../config/global_constants\"\r\nconst bcrypt = require('bcryptjs') \r\nexport default class EditUser extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n           name: ``,\r\n            email: ``,\r\n       \r\n            redirectToDisplayAllCars:localStorage.accessLevel < ACCESS_LEVEL_NORMAL_USER,\r\n            wasSubmittedAtLeastOnce:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() \r\n    {      \r\n\r\n      \r\n        this.inputToFocus.focus()\r\n \r\n        axios.get(`${SERVER_HOST}/users/get_user/${this.props.match.params.id}`, {headers:{\"authorization\":localStorage.token}})\r\n     \r\n        .then(res => \r\n        {    \r\n          \r\n            this.setState({\r\n               name: res.data.name,\r\n                email: res.data.email,\r\n           \r\n            })      \r\n      \r\n        })\r\n        .catch(err => \r\n        {\r\n           \r\n           \r\n          \r\n           \r\n            // do nothing\r\n        })\r\n    }\r\n\r\n\r\n    handleChange = (e) => \r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => \r\n    {\r\n        e.preventDefault()\r\n      const formInputsState = this.validate();\r\n\r\n       \r\n     \r\n      if (Object.keys(formInputsState).every(index => formInputsState[index])) {\r\n        const userObject = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n        \r\n        }\r\n     \r\n\r\n        axios.put(`${SERVER_HOST}/users/update_user/${this.props.match.params.id}`, userObject, {headers:{\"authorization\":localStorage.token}})\r\n        \r\n        .then(res => \r\n        {             \r\n            this.setState({redirectToDisplayAllCars:true})\r\n        })\r\n        .catch(err => \r\n        {\r\n            console.log(\"Record not EDITED INVALID\")\r\n            this.setState({wasSubmittedAtLeastOnce: true})\r\n        })\r\n\r\n\r\n\r\n        axios.put(`${SERVER_HOST}/users/update_user/${this.props.match.params.id}`, userObject, {headers:{\"authorization\":localStorage.token}})\r\n        .then(res => \r\n        {             \r\n            this.setState({redirectToDisplayAllCars:true})\r\n        })\r\n        .catch(err => \r\n        {\r\n            console.log(\"Record not EDITED INVALID\")\r\n            this.setState({wasSubmittedAtLeastOnce: true})\r\n        })\r\n      \r\n    }\r\n    else {\r\n        alert(\"Record Not Added Invalid Input\")\r\n    }\r\n    }\r\n\r\n    \r\n    validateName()\r\n    {    \r\n        const pattern = /^[a-zA-Z\\s]*$/;\r\n        return pattern.test(String(this.state.name))\r\n        \r\n    }\r\n    \r\n    \r\n    validateEmail()\r\n    {    \r\n        const pattern = /^\\S+@\\S+\\.\\S+$/;\r\n        return pattern.test(String(this.state.email))\r\n     \r\n\r\n\r\n\r\n\r\n    }\r\n    \r\n\r\n    \r\n    \r\n    // validatePassword()\r\n    // {    \r\n    //     const level = parseInt(this.state.accessLevel)\r\n    //  if(level == 0 ){\r\n    //      alert(\"Warning the User Will Be Blocked From Editing Privelages Until The Access Level They are Given is Increased\")\r\n    //  }\r\n    //     return (level >= 0 && level <= 2)\r\n      \r\n    // }\r\n\r\n\r\n   \r\n\r\n\r\n    validate() \r\n    {\r\n        return {\r\n           name: this.validateName(),\r\n           email: this.validateEmail(),\r\n\r\n           \r\n        };\r\n    }\r\n\r\n\r\n    render() \r\n    {\r\n        let errorMessage = \"\";\r\n        if(this.state.wasSubmittedAtLeastOnce)\r\n        {\r\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br/></div>;\r\n        } \r\n        \r\n        return (\r\n            <div className=\"form-container\">\r\n    \r\n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/Logout\"/> : null}  \r\n                    \r\n                {errorMessage}\r\n                \r\n                <Form>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                 \r\n                   \r\n        \r\n  \r\n                    <LinkInClass value=\"Update\" className=\"green-button\" onClick={this.handleSubmit}/>  \r\n    \r\n                    <Link className=\"red-button\" to={\"/DisplayBody\"}>Cancel</Link>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}