{"ast":null,"code":"var _jsxFileName = \"/Users/seanmcavoy/nodejs_projects/MernCA_new/client/src/components/EditTopic.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { ACCESS_LEVEL_NORMAL_USER, ACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../config/global_constants\";\nexport default class EditCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const topicObject = {\n        title: this.state.title,\n        discription: this.state.discription,\n        tags: this.state.tags\n      };\n      axios.put(\"\".concat(SERVER_HOST, \"/topics/update_topic/\").concat(this.props.match.params.id), topicObject, {\n        headers: {\n          \"authorization\": localStorage.token\n        }\n      }).then(res => {\n        this.setState({\n          redirectToDisplayBody: true\n        });\n      }).catch(err => {\n        this.setState({\n          wasSubmittedAtLeastOnce: true\n        });\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      discription: \"\",\n      tags: [],\n      selectedFiles: null,\n      redirectToDisplayBody: localStorage.accessLevel < ACCESS_LEVEL_ADMIN,\n      wasSubmittedAtLeastOnce: false\n    };\n  }\n\n  componentDidMount() {\n    this.inputToFocus.focus();\n    axios.get(\"\".concat(SERVER_HOST, \"/topics/get_topic/\").concat(this.props.match.params.id), {\n      headers: {\n        \"authorization\": localStorage.token\n      }\n    }).then(res => {\n      this.setState({\n        title: res.data.title,\n        discription: res.data.discription,\n        tags: res.data.tags\n      });\n    }).catch(err => {// do nothing\n    });\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Error: All fields must be filled in\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.redirectToDisplayBody ? React.createElement(Redirect, {\n      to: \"/DisplayBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : null, errorMessage, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Model\"), React.createElement(Form.Control, {\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      type: \"text\",\n      name: \"model\",\n      value: this.state.model,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"colour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Colour\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"colour\",\n      value: this.state.colour,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Year\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"year\",\n      value: this.state.year,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"price\",\n      value: this.state.price,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(LinkInClass, {\n      value: \"Update\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/seanmcavoy/nodejs_projects/MernCA_new/client/src/components/EditTopic.js"],"names":["React","Component","Form","Redirect","Link","axios","LinkInClass","ACCESS_LEVEL_NORMAL_USER","ACCESS_LEVEL_ADMIN","SERVER_HOST","EditCar","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","topicObject","title","state","discription","tags","put","match","params","id","headers","localStorage","token","then","res","redirectToDisplayBody","catch","err","wasSubmittedAtLeastOnce","selectedFiles","accessLevel","componentDidMount","inputToFocus","focus","get","data","render","errorMessage","input","model","colour","year","price"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport {Redirect, Link} from \"react-router-dom\"\nimport axios from \"axios\"\n\nimport LinkInClass from \"../components/LinkInClass\"\n\nimport {ACCESS_LEVEL_NORMAL_USER, ACCESS_LEVEL_ADMIN, SERVER_HOST} from \"../config/global_constants\"\n\nexport default class EditCar extends Component \n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {\n            title:\"\",\n            discription:\"\",\n            tags:[],\n            selectedFiles:null,\n            redirectToDisplayBody:localStorage.accessLevel < ACCESS_LEVEL_ADMIN,\n            wasSubmittedAtLeastOnce:false\n        }\n    }\n\n    componentDidMount() \n    {      \n        this.inputToFocus.focus()\n  \n        axios.get(`${SERVER_HOST}/topics/get_topic/${this.props.match.params.id}`, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {     \n            this.setState({\n                title: res.data.title,\n                discription: res.data.discription,\n                tags: res.data.tags,\n            })            \n        })\n        .catch(err => \n        {\n            // do nothing\n        })\n    }\n\n\n    handleChange = (e) => \n    {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    handleSubmit = (e) => \n    {\n        e.preventDefault()\n\n        const topicObject = {\n            title: this.state.title,\n            discription: this.state.discription,\n            tags: this.state.tags,\n        }\n\n        axios.put(`${SERVER_HOST}/topics/update_topic/${this.props.match.params.id}`, topicObject, {headers:{\"authorization\":localStorage.token}})\n        .then(res => \n        {             \n            this.setState({redirectToDisplayBody:true})\n        })\n        .catch(err => \n        {\n            this.setState({wasSubmittedAtLeastOnce: true})\n        })\n    }\n\n\n    render() \n    {\n        let errorMessage = \"\";\n        if(this.state.wasSubmittedAtLeastOnce)\n        {\n            errorMessage = <div className=\"error\">Error: All fields must be filled in<br/></div>;\n        } \n        \n        return (\n            <div className=\"form-container\">\n    \n                {this.state.redirectToDisplayBody ? <Redirect to=\"/DisplayBody\"/> : null}  \n                    \n                {errorMessage}\n                \n                <Form>\n                    <Form.Group controlId=\"model\">\n                        <Form.Label>Model</Form.Label>\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"model\" value={this.state.model} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"colour\">\n                        <Form.Label>Colour</Form.Label>\n                        <Form.Control type=\"text\" name=\"colour\" value={this.state.colour} onChange={this.handleChange} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"year\">\n                        <Form.Label>Year</Form.Label>\n                        <Form.Control type=\"text\" name=\"year\" value={this.state.year} onChange={this.handleChange} />\n                    </Form.Group>\n        \n                    <Form.Group controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange} />\n                    </Form.Group>\n  \n                    <LinkInClass value=\"Update\" className=\"green-button\" onClick={this.handleSubmit}/>  \n    \n                    <Link className=\"red-button\" to={\"/DisplayBody\"}>Cancel</Link>\n                </Form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}